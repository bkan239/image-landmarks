/*
 * Betaface API 2.0
 * Betaface face recognition API.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Face;
import java.io.IOException;

/**
 * represents a cropped face information.
 */
@ApiModel(description = "represents a cropped face information.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-01-02T11:12:16.872Z")
public class CroppedFace {
  @SerializedName("image_base64")
  private String imageBase64 = null;

  @SerializedName("face")
  private Face face = null;

  public CroppedFace imageBase64(String imageBase64) {
    this.imageBase64 = imageBase64;
    return this;
  }

   /**
   * base64 encoded cropped face image file (jpg or png).
   * @return imageBase64
  **/
  @ApiModelProperty(value = "base64 encoded cropped face image file (jpg or png).")
  public String getImageBase64() {
    return imageBase64;
  }

  public void setImageBase64(String imageBase64) {
    this.imageBase64 = imageBase64;
  }

  public CroppedFace face(Face face) {
    this.face = face;
    return this;
  }

   /**
   * face information with pixel related properties in cropped image pixel space.
   * @return face
  **/
  @ApiModelProperty(value = "face information with pixel related properties in cropped image pixel space.")
  public Face getFace() {
    return face;
  }

  public void setFace(Face face) {
    this.face = face;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CroppedFace croppedFace = (CroppedFace) o;
    return Objects.equals(this.imageBase64, croppedFace.imageBase64) &&
        Objects.equals(this.face, croppedFace.face);
  }

  @Override
  public int hashCode() {
    return Objects.hash(imageBase64, face);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CroppedFace {\n");
    
    sb.append("    imageBase64: ").append(toIndentedString(imageBase64)).append("\n");
    sb.append("    face: ").append(toIndentedString(face)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

