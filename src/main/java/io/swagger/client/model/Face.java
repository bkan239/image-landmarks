/*
 * Betaface API 2.0
 * Betaface face recognition API.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Point;
import io.swagger.client.model.Tag;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

/**
 * represents a face information.
 */
@ApiModel(description = "represents a face information.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-01-02T11:12:16.872Z")
public class Face {
  @SerializedName("face_uuid")
  private UUID faceUuid = null;

  @SerializedName("media_uuid")
  private UUID mediaUuid = null;

  @SerializedName("x")
  private Double x = null;

  @SerializedName("y")
  private Double y = null;

  @SerializedName("width")
  private Double width = null;

  @SerializedName("height")
  private Double height = null;

  @SerializedName("angle")
  private Double angle = null;

  @SerializedName("detection_score")
  private Double detectionScore = null;

  @SerializedName("points")
  private List<Point> points = null;

  @SerializedName("user_points")
  private List<Point> userPoints = null;

  @SerializedName("tags")
  private List<Tag> tags = null;

  @SerializedName("person_id")
  private String personId = null;

  @SerializedName("appearance_id")
  private Integer appearanceId = null;

  @SerializedName("start")
  private String start = null;

  @SerializedName("duration")
  private String duration = null;

  public Face faceUuid(UUID faceUuid) {
    this.faceUuid = faceUuid;
    return this;
  }

   /**
   * face unique identifier.
   * @return faceUuid
  **/
  @ApiModelProperty(value = "face unique identifier.")
  public UUID getFaceUuid() {
    return faceUuid;
  }

  public void setFaceUuid(UUID faceUuid) {
    this.faceUuid = faceUuid;
  }

  public Face mediaUuid(UUID mediaUuid) {
    this.mediaUuid = mediaUuid;
    return this;
  }

   /**
   * media unique identifier.
   * @return mediaUuid
  **/
  @ApiModelProperty(value = "media unique identifier.")
  public UUID getMediaUuid() {
    return mediaUuid;
  }

  public void setMediaUuid(UUID mediaUuid) {
    this.mediaUuid = mediaUuid;
  }

  public Face x(Double x) {
    this.x = x;
    return this;
  }

   /**
   * x coordinate of the face bounding box center in pixels.
   * @return x
  **/
  @ApiModelProperty(value = "x coordinate of the face bounding box center in pixels.")
  public Double getX() {
    return x;
  }

  public void setX(Double x) {
    this.x = x;
  }

  public Face y(Double y) {
    this.y = y;
    return this;
  }

   /**
   * y coordinate of the face bounding box center in pixels.
   * @return y
  **/
  @ApiModelProperty(value = "y coordinate of the face bounding box center in pixels.")
  public Double getY() {
    return y;
  }

  public void setY(Double y) {
    this.y = y;
  }

  public Face width(Double width) {
    this.width = width;
    return this;
  }

   /**
   * width of the face bounding box center in pixels.
   * @return width
  **/
  @ApiModelProperty(value = "width of the face bounding box center in pixels.")
  public Double getWidth() {
    return width;
  }

  public void setWidth(Double width) {
    this.width = width;
  }

  public Face height(Double height) {
    this.height = height;
    return this;
  }

   /**
   * height of the face bounding box center in pixels.
   * @return height
  **/
  @ApiModelProperty(value = "height of the face bounding box center in pixels.")
  public Double getHeight() {
    return height;
  }

  public void setHeight(Double height) {
    this.height = height;
  }

  public Face angle(Double angle) {
    this.angle = angle;
    return this;
  }

   /**
   * in-plane rotation (roll) of the face bounding box center in degrees.
   * @return angle
  **/
  @ApiModelProperty(value = "in-plane rotation (roll) of the face bounding box center in degrees.")
  public Double getAngle() {
    return angle;
  }

  public void setAngle(Double angle) {
    this.angle = angle;
  }

  public Face detectionScore(Double detectionScore) {
    this.detectionScore = detectionScore;
    return this;
  }

   /**
   * confidence-like value of the face detection, low detection scores (lower than 0.5 for example) correspond to higher probability of false detection.
   * @return detectionScore
  **/
  @ApiModelProperty(value = "confidence-like value of the face detection, low detection scores (lower than 0.5 for example) correspond to higher probability of false detection.")
  public Double getDetectionScore() {
    return detectionScore;
  }

  public void setDetectionScore(Double detectionScore) {
    this.detectionScore = detectionScore;
  }

  public Face points(List<Point> points) {
    this.points = points;
    return this;
  }

  public Face addPointsItem(Point pointsItem) {
    if (this.points == null) {
      this.points = new ArrayList<Point>();
    }
    this.points.add(pointsItem);
    return this;
  }

   /**
   * facial landmark points.
   * @return points
  **/
  @ApiModelProperty(value = "facial landmark points.")
  public List<Point> getPoints() {
    return points;
  }

  public void setPoints(List<Point> points) {
    this.points = points;
  }

  public Face userPoints(List<Point> userPoints) {
    this.userPoints = userPoints;
    return this;
  }

  public Face addUserPointsItem(Point userPointsItem) {
    if (this.userPoints == null) {
      this.userPoints = new ArrayList<Point>();
    }
    this.userPoints.add(userPointsItem);
    return this;
  }

   /**
   * user-defined facial landmark points.
   * @return userPoints
  **/
  @ApiModelProperty(value = "user-defined facial landmark points.")
  public List<Point> getUserPoints() {
    return userPoints;
  }

  public void setUserPoints(List<Point> userPoints) {
    this.userPoints = userPoints;
  }

  public Face tags(List<Tag> tags) {
    this.tags = tags;
    return this;
  }

  public Face addTagsItem(Tag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<Tag>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * list of detected or labelled face tags - classifiers, attributes, measurements.
   * @return tags
  **/
  @ApiModelProperty(value = "list of detected or labelled face tags - classifiers, attributes, measurements.")
  public List<Tag> getTags() {
    return tags;
  }

  public void setTags(List<Tag> tags) {
    this.tags = tags;
  }

  public Face personId(String personId) {
    this.personId = personId;
    return this;
  }

   /**
   * assigned person id and namespace in format name@namespace.
   * @return personId
  **/
  @ApiModelProperty(value = "assigned person id and namespace in format name@namespace.")
  public String getPersonId() {
    return personId;
  }

  public void setPersonId(String personId) {
    this.personId = personId;
  }

  public Face appearanceId(Integer appearanceId) {
    this.appearanceId = appearanceId;
    return this;
  }

   /**
   * reserved for future video processing
   * @return appearanceId
  **/
  @ApiModelProperty(value = "reserved for future video processing")
  public Integer getAppearanceId() {
    return appearanceId;
  }

  public void setAppearanceId(Integer appearanceId) {
    this.appearanceId = appearanceId;
  }

  public Face start(String start) {
    this.start = start;
    return this;
  }

   /**
   * reserved for future video processing
   * @return start
  **/
  @ApiModelProperty(value = "reserved for future video processing")
  public String getStart() {
    return start;
  }

  public void setStart(String start) {
    this.start = start;
  }

  public Face duration(String duration) {
    this.duration = duration;
    return this;
  }

   /**
   * reserved for future video processing
   * @return duration
  **/
  @ApiModelProperty(value = "reserved for future video processing")
  public String getDuration() {
    return duration;
  }

  public void setDuration(String duration) {
    this.duration = duration;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Face face = (Face) o;
    return Objects.equals(this.faceUuid, face.faceUuid) &&
        Objects.equals(this.mediaUuid, face.mediaUuid) &&
        Objects.equals(this.x, face.x) &&
        Objects.equals(this.y, face.y) &&
        Objects.equals(this.width, face.width) &&
        Objects.equals(this.height, face.height) &&
        Objects.equals(this.angle, face.angle) &&
        Objects.equals(this.detectionScore, face.detectionScore) &&
        Objects.equals(this.points, face.points) &&
        Objects.equals(this.userPoints, face.userPoints) &&
        Objects.equals(this.tags, face.tags) &&
        Objects.equals(this.personId, face.personId) &&
        Objects.equals(this.appearanceId, face.appearanceId) &&
        Objects.equals(this.start, face.start) &&
        Objects.equals(this.duration, face.duration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(faceUuid, mediaUuid, x, y, width, height, angle, detectionScore, points, userPoints, tags, personId, appearanceId, start, duration);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Face {\n");
    
    sb.append("    faceUuid: ").append(toIndentedString(faceUuid)).append("\n");
    sb.append("    mediaUuid: ").append(toIndentedString(mediaUuid)).append("\n");
    sb.append("    x: ").append(toIndentedString(x)).append("\n");
    sb.append("    y: ").append(toIndentedString(y)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    angle: ").append(toIndentedString(angle)).append("\n");
    sb.append("    detectionScore: ").append(toIndentedString(detectionScore)).append("\n");
    sb.append("    points: ").append(toIndentedString(points)).append("\n");
    sb.append("    userPoints: ").append(toIndentedString(userPoints)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    personId: ").append(toIndentedString(personId)).append("\n");
    sb.append("    appearanceId: ").append(toIndentedString(appearanceId)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

