/*
 * Betaface API 2.0
 * Betaface face recognition API.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Face;
import io.swagger.client.model.TagMedia;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

/**
 * represents a media information.
 */
@ApiModel(description = "represents a media information.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-01-02T11:12:16.872Z")
public class Media {
  @SerializedName("media_uuid")
  private UUID mediaUuid = null;

  @SerializedName("checksum")
  private String checksum = null;

  @SerializedName("faces")
  private List<Face> faces = null;

  @SerializedName("tags")
  private List<TagMedia> tags = null;

  @SerializedName("original_filename")
  private String originalFilename = null;

  @SerializedName("duration")
  private String duration = null;

  public Media mediaUuid(UUID mediaUuid) {
    this.mediaUuid = mediaUuid;
    return this;
  }

   /**
   * media unique identifier.
   * @return mediaUuid
  **/
  @ApiModelProperty(value = "media unique identifier.")
  public UUID getMediaUuid() {
    return mediaUuid;
  }

  public void setMediaUuid(UUID mediaUuid) {
    this.mediaUuid = mediaUuid;
  }

  public Media checksum(String checksum) {
    this.checksum = checksum;
    return this;
  }

   /**
   * media content hash value.
   * @return checksum
  **/
  @ApiModelProperty(value = "media content hash value.")
  public String getChecksum() {
    return checksum;
  }

  public void setChecksum(String checksum) {
    this.checksum = checksum;
  }

  public Media faces(List<Face> faces) {
    this.faces = faces;
    return this;
  }

  public Media addFacesItem(Face facesItem) {
    if (this.faces == null) {
      this.faces = new ArrayList<Face>();
    }
    this.faces.add(facesItem);
    return this;
  }

   /**
   * collection of detected or labelled faces.
   * @return faces
  **/
  @ApiModelProperty(value = "collection of detected or labelled faces.")
  public List<Face> getFaces() {
    return faces;
  }

  public void setFaces(List<Face> faces) {
    this.faces = faces;
  }

  public Media tags(List<TagMedia> tags) {
    this.tags = tags;
    return this;
  }

  public Media addTagsItem(TagMedia tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagMedia>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * collection of media tags.
   * @return tags
  **/
  @ApiModelProperty(value = "collection of media tags.")
  public List<TagMedia> getTags() {
    return tags;
  }

  public void setTags(List<TagMedia> tags) {
    this.tags = tags;
  }

  public Media originalFilename(String originalFilename) {
    this.originalFilename = originalFilename;
    return this;
  }

   /**
   * reference original media filename, path, uri or your application specific id that was provided during media upload.
   * @return originalFilename
  **/
  @ApiModelProperty(value = "reference original media filename, path, uri or your application specific id that was provided during media upload.")
  public String getOriginalFilename() {
    return originalFilename;
  }

  public void setOriginalFilename(String originalFilename) {
    this.originalFilename = originalFilename;
  }

  public Media duration(String duration) {
    this.duration = duration;
    return this;
  }

   /**
   * reserved for future video processing
   * @return duration
  **/
  @ApiModelProperty(value = "reserved for future video processing")
  public String getDuration() {
    return duration;
  }

  public void setDuration(String duration) {
    this.duration = duration;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Media media = (Media) o;
    return Objects.equals(this.mediaUuid, media.mediaUuid) &&
        Objects.equals(this.checksum, media.checksum) &&
        Objects.equals(this.faces, media.faces) &&
        Objects.equals(this.tags, media.tags) &&
        Objects.equals(this.originalFilename, media.originalFilename) &&
        Objects.equals(this.duration, media.duration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mediaUuid, checksum, faces, tags, originalFilename, duration);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Media {\n");
    
    sb.append("    mediaUuid: ").append(toIndentedString(mediaUuid)).append("\n");
    sb.append("    checksum: ").append(toIndentedString(checksum)).append("\n");
    sb.append("    faces: ").append(toIndentedString(faces)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    originalFilename: ").append(toIndentedString(originalFilename)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

