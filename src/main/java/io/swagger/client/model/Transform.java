/*
 * Betaface API 2.0
 * Betaface face recognition API.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;

/**
 * represents a recognition results for one or more faces.
 */
@ApiModel(description = "represents a recognition results for one or more faces.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-01-02T11:12:16.872Z")
public class Transform {
  @SerializedName("transform_uuid")
  private UUID transformUuid = null;

  @SerializedName("image_base64")
  private String imageBase64 = null;

  public Transform transformUuid(UUID transformUuid) {
    this.transformUuid = transformUuid;
    return this;
  }

   /**
   * transform request unique identifier.
   * @return transformUuid
  **/
  @ApiModelProperty(value = "transform request unique identifier.")
  public UUID getTransformUuid() {
    return transformUuid;
  }

  public void setTransformUuid(UUID transformUuid) {
    this.transformUuid = transformUuid;
  }

  public Transform imageBase64(String imageBase64) {
    this.imageBase64 = imageBase64;
    return this;
  }

   /**
   * base64 encoded transofrm result image file (jpg or png).
   * @return imageBase64
  **/
  @ApiModelProperty(value = "base64 encoded transofrm result image file (jpg or png).")
  public String getImageBase64() {
    return imageBase64;
  }

  public void setImageBase64(String imageBase64) {
    this.imageBase64 = imageBase64;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Transform transform = (Transform) o;
    return Objects.equals(this.transformUuid, transform.transformUuid) &&
        Objects.equals(this.imageBase64, transform.imageBase64);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transformUuid, imageBase64);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Transform {\n");
    
    sb.append("    transformUuid: ").append(toIndentedString(transformUuid)).append("\n");
    sb.append("    imageBase64: ").append(toIndentedString(imageBase64)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

